//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace ConvexDecomposition {

public class Parameters : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Parameters(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Parameters obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Parameters() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VHACDBridge.delete_Parameters(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Parameters() : this(VHACDBridge.new_Parameters(), true) {
  }

  public void Init() {
    VHACDBridge.Parameters_Init(swigCPtr);
  }

  public double m_concavity {
    set {
      VHACDBridge.Parameters_m_concavity_set(swigCPtr, value);
    } 
    get {
      double ret = VHACDBridge.Parameters_m_concavity_get(swigCPtr);
      return ret;
    } 
  }

  public double m_alpha {
    set {
      VHACDBridge.Parameters_m_alpha_set(swigCPtr, value);
    } 
    get {
      double ret = VHACDBridge.Parameters_m_alpha_get(swigCPtr);
      return ret;
    } 
  }

  public double m_beta {
    set {
      VHACDBridge.Parameters_m_beta_set(swigCPtr, value);
    } 
    get {
      double ret = VHACDBridge.Parameters_m_beta_get(swigCPtr);
      return ret;
    } 
  }

  public double m_minVolumePerCH {
    set {
      VHACDBridge.Parameters_m_minVolumePerCH_set(swigCPtr, value);
    } 
    get {
      double ret = VHACDBridge.Parameters_m_minVolumePerCH_get(swigCPtr);
      return ret;
    } 
  }

  public UserCallback m_callback {
    set {
      VHACDBridge.Parameters_m_callback_set(swigCPtr, UserCallback.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = VHACDBridge.Parameters_m_callback_get(swigCPtr);
      UserCallback ret = (cPtr == global::System.IntPtr.Zero) ? null : new UserCallback(cPtr, false);
      return ret;
    } 
  }

  public UserLogger m_logger {
    set {
      VHACDBridge.Parameters_m_logger_set(swigCPtr, UserLogger.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = VHACDBridge.Parameters_m_logger_get(swigCPtr);
      UserLogger ret = (cPtr == global::System.IntPtr.Zero) ? null : new UserLogger(cPtr, false);
      return ret;
    } 
  }

  public uint m_resolution {
    set {
      VHACDBridge.Parameters_m_resolution_set(swigCPtr, value);
    } 
    get {
      uint ret = VHACDBridge.Parameters_m_resolution_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_maxNumVerticesPerCH {
    set {
      VHACDBridge.Parameters_m_maxNumVerticesPerCH_set(swigCPtr, value);
    } 
    get {
      uint ret = VHACDBridge.Parameters_m_maxNumVerticesPerCH_get(swigCPtr);
      return ret;
    } 
  }

  public int m_depth {
    set {
      VHACDBridge.Parameters_m_depth_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_depth_get(swigCPtr);
      return ret;
    } 
  }

  public int m_planeDownsampling {
    set {
      VHACDBridge.Parameters_m_planeDownsampling_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_planeDownsampling_get(swigCPtr);
      return ret;
    } 
  }

  public int m_convexhullDownsampling {
    set {
      VHACDBridge.Parameters_m_convexhullDownsampling_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_convexhullDownsampling_get(swigCPtr);
      return ret;
    } 
  }

  public int m_pca {
    set {
      VHACDBridge.Parameters_m_pca_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_pca_get(swigCPtr);
      return ret;
    } 
  }

  public int m_mode {
    set {
      VHACDBridge.Parameters_m_mode_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_mode_get(swigCPtr);
      return ret;
    } 
  }

  public int m_convexhullApproximation {
    set {
      VHACDBridge.Parameters_m_convexhullApproximation_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_convexhullApproximation_get(swigCPtr);
      return ret;
    } 
  }

  public int m_oclAcceleration {
    set {
      VHACDBridge.Parameters_m_oclAcceleration_set(swigCPtr, value);
    } 
    get {
      int ret = VHACDBridge.Parameters_m_oclAcceleration_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_maxConvexHulls {
    set {
      VHACDBridge.Parameters_m_maxConvexHulls_set(swigCPtr, value);
    } 
    get {
      uint ret = VHACDBridge.Parameters_m_maxConvexHulls_get(swigCPtr);
      return ret;
    } 
  }

}

}
